// Generated by view binder compiler. Do not edit!
package cat.copernic.fpshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cat.copernic.fpshare.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAdminUFsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnDeleteModule;

  @NonNull
  public final Button btnEditModule;

  @NonNull
  public final Button buttonAddUF;

  @NonNull
  public final ConstraintLayout layoutUFs;

  @NonNull
  public final RecyclerView recyclerViewUFs;

  private FragmentAdminUFsBinding(@NonNull FrameLayout rootView, @NonNull Button btnDeleteModule,
      @NonNull Button btnEditModule, @NonNull Button buttonAddUF,
      @NonNull ConstraintLayout layoutUFs, @NonNull RecyclerView recyclerViewUFs) {
    this.rootView = rootView;
    this.btnDeleteModule = btnDeleteModule;
    this.btnEditModule = btnEditModule;
    this.buttonAddUF = buttonAddUF;
    this.layoutUFs = layoutUFs;
    this.recyclerViewUFs = recyclerViewUFs;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdminUFsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdminUFsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_admin_u_fs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdminUFsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteModule;
      Button btnDeleteModule = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteModule == null) {
        break missingId;
      }

      id = R.id.btnEditModule;
      Button btnEditModule = ViewBindings.findChildViewById(rootView, id);
      if (btnEditModule == null) {
        break missingId;
      }

      id = R.id.button_add_UF;
      Button buttonAddUF = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddUF == null) {
        break missingId;
      }

      id = R.id.layout_UFs;
      ConstraintLayout layoutUFs = ViewBindings.findChildViewById(rootView, id);
      if (layoutUFs == null) {
        break missingId;
      }

      id = R.id.recyclerViewUFs;
      RecyclerView recyclerViewUFs = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewUFs == null) {
        break missingId;
      }

      return new FragmentAdminUFsBinding((FrameLayout) rootView, btnDeleteModule, btnEditModule,
          buttonAddUF, layoutUFs, recyclerViewUFs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
