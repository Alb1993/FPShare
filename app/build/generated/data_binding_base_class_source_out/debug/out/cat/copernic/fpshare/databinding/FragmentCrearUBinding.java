// Generated by view binder compiler. Do not edit!
package cat.copernic.fpshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cat.copernic.fpshare.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCrearUBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnAddUf;

  @NonNull
  public final ConstraintLayout crearUF;

  @NonNull
  public final TextInputEditText inputIDuf;

  @NonNull
  public final TextInputLayout inputIDufMain;

  @NonNull
  public final TextInputEditText inputNombreUf;

  @NonNull
  public final TextInputLayout inputNombreUfMain;

  private FragmentCrearUBinding(@NonNull FrameLayout rootView, @NonNull Button btnAddUf,
      @NonNull ConstraintLayout crearUF, @NonNull TextInputEditText inputIDuf,
      @NonNull TextInputLayout inputIDufMain, @NonNull TextInputEditText inputNombreUf,
      @NonNull TextInputLayout inputNombreUfMain) {
    this.rootView = rootView;
    this.btnAddUf = btnAddUf;
    this.crearUF = crearUF;
    this.inputIDuf = inputIDuf;
    this.inputIDufMain = inputIDufMain;
    this.inputNombreUf = inputNombreUf;
    this.inputNombreUfMain = inputNombreUfMain;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCrearUBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCrearUBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_crear_u, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCrearUBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddUf;
      Button btnAddUf = ViewBindings.findChildViewById(rootView, id);
      if (btnAddUf == null) {
        break missingId;
      }

      id = R.id.crearUF;
      ConstraintLayout crearUF = ViewBindings.findChildViewById(rootView, id);
      if (crearUF == null) {
        break missingId;
      }

      id = R.id.inputIDuf;
      TextInputEditText inputIDuf = ViewBindings.findChildViewById(rootView, id);
      if (inputIDuf == null) {
        break missingId;
      }

      id = R.id.inputIDufMain;
      TextInputLayout inputIDufMain = ViewBindings.findChildViewById(rootView, id);
      if (inputIDufMain == null) {
        break missingId;
      }

      id = R.id.inputNombreUf;
      TextInputEditText inputNombreUf = ViewBindings.findChildViewById(rootView, id);
      if (inputNombreUf == null) {
        break missingId;
      }

      id = R.id.inputNombreUfMain;
      TextInputLayout inputNombreUfMain = ViewBindings.findChildViewById(rootView, id);
      if (inputNombreUfMain == null) {
        break missingId;
      }

      return new FragmentCrearUBinding((FrameLayout) rootView, btnAddUf, crearUF, inputIDuf,
          inputIDufMain, inputNombreUf, inputNombreUfMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
