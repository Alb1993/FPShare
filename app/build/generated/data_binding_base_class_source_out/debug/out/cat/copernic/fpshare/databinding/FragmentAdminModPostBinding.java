// Generated by view binder compiler. Do not edit!
package cat.copernic.fpshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cat.copernic.fpshare.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAdminModPostBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnPublish;

  @NonNull
  public final TextInputLayout inputDescriptionNewPost;

  @NonNull
  public final TextInputLayout inputLinkNewPost;

  @NonNull
  public final TextInputLayout inputTitleNewPost;

  @NonNull
  public final TextInputEditText textDescription;

  @NonNull
  public final TextInputEditText textLink;

  @NonNull
  public final TextInputEditText textPost;

  @NonNull
  public final TextView textViewDescriptionNewPost;

  @NonNull
  public final TextView textViewLinkNewPost;

  @NonNull
  public final TextView textViewTitleNewPost;

  private FragmentAdminModPostBinding(@NonNull FrameLayout rootView, @NonNull Button btnDelete,
      @NonNull Button btnPublish, @NonNull TextInputLayout inputDescriptionNewPost,
      @NonNull TextInputLayout inputLinkNewPost, @NonNull TextInputLayout inputTitleNewPost,
      @NonNull TextInputEditText textDescription, @NonNull TextInputEditText textLink,
      @NonNull TextInputEditText textPost, @NonNull TextView textViewDescriptionNewPost,
      @NonNull TextView textViewLinkNewPost, @NonNull TextView textViewTitleNewPost) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnPublish = btnPublish;
    this.inputDescriptionNewPost = inputDescriptionNewPost;
    this.inputLinkNewPost = inputLinkNewPost;
    this.inputTitleNewPost = inputTitleNewPost;
    this.textDescription = textDescription;
    this.textLink = textLink;
    this.textPost = textPost;
    this.textViewDescriptionNewPost = textViewDescriptionNewPost;
    this.textViewLinkNewPost = textViewLinkNewPost;
    this.textViewTitleNewPost = textViewTitleNewPost;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdminModPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdminModPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_admin_mod_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdminModPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btn_publish;
      Button btnPublish = ViewBindings.findChildViewById(rootView, id);
      if (btnPublish == null) {
        break missingId;
      }

      id = R.id.input_description_new_post;
      TextInputLayout inputDescriptionNewPost = ViewBindings.findChildViewById(rootView, id);
      if (inputDescriptionNewPost == null) {
        break missingId;
      }

      id = R.id.input_link_new_post;
      TextInputLayout inputLinkNewPost = ViewBindings.findChildViewById(rootView, id);
      if (inputLinkNewPost == null) {
        break missingId;
      }

      id = R.id.input_title_new_post;
      TextInputLayout inputTitleNewPost = ViewBindings.findChildViewById(rootView, id);
      if (inputTitleNewPost == null) {
        break missingId;
      }

      id = R.id.text_description;
      TextInputEditText textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.text_link;
      TextInputEditText textLink = ViewBindings.findChildViewById(rootView, id);
      if (textLink == null) {
        break missingId;
      }

      id = R.id.text_post;
      TextInputEditText textPost = ViewBindings.findChildViewById(rootView, id);
      if (textPost == null) {
        break missingId;
      }

      id = R.id.textView_description_new_post;
      TextView textViewDescriptionNewPost = ViewBindings.findChildViewById(rootView, id);
      if (textViewDescriptionNewPost == null) {
        break missingId;
      }

      id = R.id.textView_link_new_post;
      TextView textViewLinkNewPost = ViewBindings.findChildViewById(rootView, id);
      if (textViewLinkNewPost == null) {
        break missingId;
      }

      id = R.id.textView_title_new_post;
      TextView textViewTitleNewPost = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitleNewPost == null) {
        break missingId;
      }

      return new FragmentAdminModPostBinding((FrameLayout) rootView, btnDelete, btnPublish,
          inputDescriptionNewPost, inputLinkNewPost, inputTitleNewPost, textDescription, textLink,
          textPost, textViewDescriptionNewPost, textViewLinkNewPost, textViewTitleNewPost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
