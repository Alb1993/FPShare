// Generated by view binder compiler. Do not edit!
package cat.copernic.fpshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cat.copernic.fpshare.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNuevaPublicacionBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final Button btnAdd;

  @NonNull
  public final Button btnPublish;

  @NonNull
  public final ConstraintLayout constraintNuevaPublicacion;

  @NonNull
  public final TextInputLayout inputDescriptionNewPost;

  @NonNull
  public final TextInputLayout inputLinkNewPost;

  @NonNull
  public final TextInputLayout inputTitleNewPost;

  @NonNull
  public final RadioButton optionAsix;

  @NonNull
  public final RadioButton optionDam;

  @NonNull
  public final RadioButton optionDaw;

  @NonNull
  public final RadioButton optionSmix;

  @NonNull
  public final Spinner spinnerModulesNewPost;

  @NonNull
  public final Spinner spinnerUfsNewPost;

  @NonNull
  public final TextView tagModul;

  @NonNull
  public final TextView tagUF;

  @NonNull
  public final RadioGroup tagsCicles;

  @NonNull
  public final TextInputEditText textDescription;

  @NonNull
  public final TextInputEditText textLink;

  @NonNull
  public final TextInputEditText textPost;

  @NonNull
  public final TextView textViewDescriptionNewPost;

  @NonNull
  public final TextView textViewLinkNewPost;

  @NonNull
  public final TextView textViewTagsNewPost;

  @NonNull
  public final TextView textViewTitleNewPost;

  private FragmentNuevaPublicacionBinding(@NonNull FrameLayout rootView, @Nullable Button btnAdd,
      @NonNull Button btnPublish, @NonNull ConstraintLayout constraintNuevaPublicacion,
      @NonNull TextInputLayout inputDescriptionNewPost, @NonNull TextInputLayout inputLinkNewPost,
      @NonNull TextInputLayout inputTitleNewPost, @NonNull RadioButton optionAsix,
      @NonNull RadioButton optionDam, @NonNull RadioButton optionDaw,
      @NonNull RadioButton optionSmix, @NonNull Spinner spinnerModulesNewPost,
      @NonNull Spinner spinnerUfsNewPost, @NonNull TextView tagModul, @NonNull TextView tagUF,
      @NonNull RadioGroup tagsCicles, @NonNull TextInputEditText textDescription,
      @NonNull TextInputEditText textLink, @NonNull TextInputEditText textPost,
      @NonNull TextView textViewDescriptionNewPost, @NonNull TextView textViewLinkNewPost,
      @NonNull TextView textViewTagsNewPost, @NonNull TextView textViewTitleNewPost) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnPublish = btnPublish;
    this.constraintNuevaPublicacion = constraintNuevaPublicacion;
    this.inputDescriptionNewPost = inputDescriptionNewPost;
    this.inputLinkNewPost = inputLinkNewPost;
    this.inputTitleNewPost = inputTitleNewPost;
    this.optionAsix = optionAsix;
    this.optionDam = optionDam;
    this.optionDaw = optionDaw;
    this.optionSmix = optionSmix;
    this.spinnerModulesNewPost = spinnerModulesNewPost;
    this.spinnerUfsNewPost = spinnerUfsNewPost;
    this.tagModul = tagModul;
    this.tagUF = tagUF;
    this.tagsCicles = tagsCicles;
    this.textDescription = textDescription;
    this.textLink = textLink;
    this.textPost = textPost;
    this.textViewDescriptionNewPost = textViewDescriptionNewPost;
    this.textViewLinkNewPost = textViewLinkNewPost;
    this.textViewTagsNewPost = textViewTagsNewPost;
    this.textViewTitleNewPost = textViewTitleNewPost;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNuevaPublicacionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNuevaPublicacionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_nueva_publicacion, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNuevaPublicacionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);

      id = R.id.btn_publish;
      Button btnPublish = ViewBindings.findChildViewById(rootView, id);
      if (btnPublish == null) {
        break missingId;
      }

      id = R.id.constraint_nueva_publicacion;
      ConstraintLayout constraintNuevaPublicacion = ViewBindings.findChildViewById(rootView, id);
      if (constraintNuevaPublicacion == null) {
        break missingId;
      }

      id = R.id.input_description_new_post;
      TextInputLayout inputDescriptionNewPost = ViewBindings.findChildViewById(rootView, id);
      if (inputDescriptionNewPost == null) {
        break missingId;
      }

      id = R.id.input_link_new_post;
      TextInputLayout inputLinkNewPost = ViewBindings.findChildViewById(rootView, id);
      if (inputLinkNewPost == null) {
        break missingId;
      }

      id = R.id.input_title_new_post;
      TextInputLayout inputTitleNewPost = ViewBindings.findChildViewById(rootView, id);
      if (inputTitleNewPost == null) {
        break missingId;
      }

      id = R.id.option_asix;
      RadioButton optionAsix = ViewBindings.findChildViewById(rootView, id);
      if (optionAsix == null) {
        break missingId;
      }

      id = R.id.option_dam;
      RadioButton optionDam = ViewBindings.findChildViewById(rootView, id);
      if (optionDam == null) {
        break missingId;
      }

      id = R.id.option_daw;
      RadioButton optionDaw = ViewBindings.findChildViewById(rootView, id);
      if (optionDaw == null) {
        break missingId;
      }

      id = R.id.option_smix;
      RadioButton optionSmix = ViewBindings.findChildViewById(rootView, id);
      if (optionSmix == null) {
        break missingId;
      }

      id = R.id.spinner_modules_new_post;
      Spinner spinnerModulesNewPost = ViewBindings.findChildViewById(rootView, id);
      if (spinnerModulesNewPost == null) {
        break missingId;
      }

      id = R.id.spinner_ufs_new_post;
      Spinner spinnerUfsNewPost = ViewBindings.findChildViewById(rootView, id);
      if (spinnerUfsNewPost == null) {
        break missingId;
      }

      id = R.id.tagModul;
      TextView tagModul = ViewBindings.findChildViewById(rootView, id);
      if (tagModul == null) {
        break missingId;
      }

      id = R.id.tagUF;
      TextView tagUF = ViewBindings.findChildViewById(rootView, id);
      if (tagUF == null) {
        break missingId;
      }

      id = R.id.tags_cicles;
      RadioGroup tagsCicles = ViewBindings.findChildViewById(rootView, id);
      if (tagsCicles == null) {
        break missingId;
      }

      id = R.id.text_description;
      TextInputEditText textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.text_link;
      TextInputEditText textLink = ViewBindings.findChildViewById(rootView, id);
      if (textLink == null) {
        break missingId;
      }

      id = R.id.text_post;
      TextInputEditText textPost = ViewBindings.findChildViewById(rootView, id);
      if (textPost == null) {
        break missingId;
      }

      id = R.id.textView_description_new_post;
      TextView textViewDescriptionNewPost = ViewBindings.findChildViewById(rootView, id);
      if (textViewDescriptionNewPost == null) {
        break missingId;
      }

      id = R.id.textView_link_new_post;
      TextView textViewLinkNewPost = ViewBindings.findChildViewById(rootView, id);
      if (textViewLinkNewPost == null) {
        break missingId;
      }

      id = R.id.textView_tags_new_post;
      TextView textViewTagsNewPost = ViewBindings.findChildViewById(rootView, id);
      if (textViewTagsNewPost == null) {
        break missingId;
      }

      id = R.id.textView_title_new_post;
      TextView textViewTitleNewPost = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitleNewPost == null) {
        break missingId;
      }

      return new FragmentNuevaPublicacionBinding((FrameLayout) rootView, btnAdd, btnPublish,
          constraintNuevaPublicacion, inputDescriptionNewPost, inputLinkNewPost, inputTitleNewPost,
          optionAsix, optionDam, optionDaw, optionSmix, spinnerModulesNewPost, spinnerUfsNewPost,
          tagModul, tagUF, tagsCicles, textDescription, textLink, textPost,
          textViewDescriptionNewPost, textViewLinkNewPost, textViewTagsNewPost,
          textViewTitleNewPost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
