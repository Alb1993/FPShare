// Generated by view binder compiler. Do not edit!
package cat.copernic.fpshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cat.copernic.fpshare.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPubliBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final ImageView imgIcon;

  @NonNull
  public final TextView textLink;

  @NonNull
  public final TextView txtDescarga;

  @NonNull
  public final TextView txtDescr;

  @NonNull
  public final TextView txtProf;

  @NonNull
  public final TextView txtPubliTitle;

  private ItemPubliBinding(@NonNull MaterialCardView rootView, @NonNull View divider,
      @NonNull ImageView imgIcon, @NonNull TextView textLink, @NonNull TextView txtDescarga,
      @NonNull TextView txtDescr, @NonNull TextView txtProf, @NonNull TextView txtPubliTitle) {
    this.rootView = rootView;
    this.divider = divider;
    this.imgIcon = imgIcon;
    this.textLink = textLink;
    this.txtDescarga = txtDescarga;
    this.txtDescr = txtDescr;
    this.txtProf = txtProf;
    this.txtPubliTitle = txtPubliTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPubliBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPubliBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_publi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPubliBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.imgIcon;
      ImageView imgIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgIcon == null) {
        break missingId;
      }

      id = R.id.textLink;
      TextView textLink = ViewBindings.findChildViewById(rootView, id);
      if (textLink == null) {
        break missingId;
      }

      id = R.id.txtDescarga;
      TextView txtDescarga = ViewBindings.findChildViewById(rootView, id);
      if (txtDescarga == null) {
        break missingId;
      }

      id = R.id.txtDescr;
      TextView txtDescr = ViewBindings.findChildViewById(rootView, id);
      if (txtDescr == null) {
        break missingId;
      }

      id = R.id.txtProf;
      TextView txtProf = ViewBindings.findChildViewById(rootView, id);
      if (txtProf == null) {
        break missingId;
      }

      id = R.id.txtPubliTitle;
      TextView txtPubliTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtPubliTitle == null) {
        break missingId;
      }

      return new ItemPubliBinding((MaterialCardView) rootView, divider, imgIcon, textLink,
          txtDescarga, txtDescr, txtProf, txtPubliTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
