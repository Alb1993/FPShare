// Generated by view binder compiler. Do not edit!
package cat.copernic.fpshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cat.copernic.fpshare.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonRegisterLogin;

  @NonNull
  public final Button buttonSinginLogin;

  @NonNull
  public final TextInputEditText edittextEmailLogin;

  @NonNull
  public final TextInputEditText edittextPasswordLogin;

  @NonNull
  public final TextView emailTextviewLogin;

  @NonNull
  public final TextInputLayout imputEmailLogin;

  @NonNull
  public final TextInputLayout imputPasswordLogin;

  @NonNull
  public final ConstraintLayout loginLayout;

  @NonNull
  public final ImageView logoLogin;

  @NonNull
  public final TextView passwordTexviewLogin;

  @NonNull
  public final TextView textViewForgottenPassword;

  private LoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonRegisterLogin,
      @NonNull Button buttonSinginLogin, @NonNull TextInputEditText edittextEmailLogin,
      @NonNull TextInputEditText edittextPasswordLogin, @NonNull TextView emailTextviewLogin,
      @NonNull TextInputLayout imputEmailLogin, @NonNull TextInputLayout imputPasswordLogin,
      @NonNull ConstraintLayout loginLayout, @NonNull ImageView logoLogin,
      @NonNull TextView passwordTexviewLogin, @NonNull TextView textViewForgottenPassword) {
    this.rootView = rootView;
    this.buttonRegisterLogin = buttonRegisterLogin;
    this.buttonSinginLogin = buttonSinginLogin;
    this.edittextEmailLogin = edittextEmailLogin;
    this.edittextPasswordLogin = edittextPasswordLogin;
    this.emailTextviewLogin = emailTextviewLogin;
    this.imputEmailLogin = imputEmailLogin;
    this.imputPasswordLogin = imputPasswordLogin;
    this.loginLayout = loginLayout;
    this.logoLogin = logoLogin;
    this.passwordTexviewLogin = passwordTexviewLogin;
    this.textViewForgottenPassword = textViewForgottenPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_register_login;
      Button buttonRegisterLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegisterLogin == null) {
        break missingId;
      }

      id = R.id.button_singin_login;
      Button buttonSinginLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonSinginLogin == null) {
        break missingId;
      }

      id = R.id.edittext_email_login;
      TextInputEditText edittextEmailLogin = ViewBindings.findChildViewById(rootView, id);
      if (edittextEmailLogin == null) {
        break missingId;
      }

      id = R.id.edittext_password_login;
      TextInputEditText edittextPasswordLogin = ViewBindings.findChildViewById(rootView, id);
      if (edittextPasswordLogin == null) {
        break missingId;
      }

      id = R.id.email_textview_login;
      TextView emailTextviewLogin = ViewBindings.findChildViewById(rootView, id);
      if (emailTextviewLogin == null) {
        break missingId;
      }

      id = R.id.imput_email_login;
      TextInputLayout imputEmailLogin = ViewBindings.findChildViewById(rootView, id);
      if (imputEmailLogin == null) {
        break missingId;
      }

      id = R.id.imput_password_login;
      TextInputLayout imputPasswordLogin = ViewBindings.findChildViewById(rootView, id);
      if (imputPasswordLogin == null) {
        break missingId;
      }

      ConstraintLayout loginLayout = (ConstraintLayout) rootView;

      id = R.id.logo_login;
      ImageView logoLogin = ViewBindings.findChildViewById(rootView, id);
      if (logoLogin == null) {
        break missingId;
      }

      id = R.id.password_texview_login;
      TextView passwordTexviewLogin = ViewBindings.findChildViewById(rootView, id);
      if (passwordTexviewLogin == null) {
        break missingId;
      }

      id = R.id.textView_forgotten_password;
      TextView textViewForgottenPassword = ViewBindings.findChildViewById(rootView, id);
      if (textViewForgottenPassword == null) {
        break missingId;
      }

      return new LoginBinding((ConstraintLayout) rootView, buttonRegisterLogin, buttonSinginLogin,
          edittextEmailLogin, edittextPasswordLogin, emailTextviewLogin, imputEmailLogin,
          imputPasswordLogin, loginLayout, logoLogin, passwordTexviewLogin,
          textViewForgottenPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
