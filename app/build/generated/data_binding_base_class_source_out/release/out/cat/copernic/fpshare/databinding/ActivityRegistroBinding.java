// Generated by view binder compiler. Do not edit!
package cat.copernic.fpshare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cat.copernic.fpshare.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegistroBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText InputMail;

  @NonNull
  public final TextInputEditText InputNombre;

  @NonNull
  public final TextInputEditText InputPassword;

  @NonNull
  public final Button btnRegistrarse;

  @NonNull
  public final ImageView fpShareLogo;

  @NonNull
  public final TextInputLayout introMail;

  @NonNull
  public final TextInputLayout introNombre;

  @NonNull
  public final TextInputLayout introPassword;

  @NonNull
  public final ConstraintLayout registroLayout;

  @NonNull
  public final TextView txtAccount;

  @NonNull
  public final TextView txtMail;

  @NonNull
  public final TextView txtNombre;

  @NonNull
  public final TextView txtPassword;

  @NonNull
  public final TextView txtSign;

  private ActivityRegistroBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText InputMail, @NonNull TextInputEditText InputNombre,
      @NonNull TextInputEditText InputPassword, @NonNull Button btnRegistrarse,
      @NonNull ImageView fpShareLogo, @NonNull TextInputLayout introMail,
      @NonNull TextInputLayout introNombre, @NonNull TextInputLayout introPassword,
      @NonNull ConstraintLayout registroLayout, @NonNull TextView txtAccount,
      @NonNull TextView txtMail, @NonNull TextView txtNombre, @NonNull TextView txtPassword,
      @NonNull TextView txtSign) {
    this.rootView = rootView;
    this.InputMail = InputMail;
    this.InputNombre = InputNombre;
    this.InputPassword = InputPassword;
    this.btnRegistrarse = btnRegistrarse;
    this.fpShareLogo = fpShareLogo;
    this.introMail = introMail;
    this.introNombre = introNombre;
    this.introPassword = introPassword;
    this.registroLayout = registroLayout;
    this.txtAccount = txtAccount;
    this.txtMail = txtMail;
    this.txtNombre = txtNombre;
    this.txtPassword = txtPassword;
    this.txtSign = txtSign;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.InputMail;
      TextInputEditText InputMail = ViewBindings.findChildViewById(rootView, id);
      if (InputMail == null) {
        break missingId;
      }

      id = R.id.InputNombre;
      TextInputEditText InputNombre = ViewBindings.findChildViewById(rootView, id);
      if (InputNombre == null) {
        break missingId;
      }

      id = R.id.InputPassword;
      TextInputEditText InputPassword = ViewBindings.findChildViewById(rootView, id);
      if (InputPassword == null) {
        break missingId;
      }

      id = R.id.btnRegistrarse;
      Button btnRegistrarse = ViewBindings.findChildViewById(rootView, id);
      if (btnRegistrarse == null) {
        break missingId;
      }

      id = R.id.fpShareLogo;
      ImageView fpShareLogo = ViewBindings.findChildViewById(rootView, id);
      if (fpShareLogo == null) {
        break missingId;
      }

      id = R.id.intro_mail;
      TextInputLayout introMail = ViewBindings.findChildViewById(rootView, id);
      if (introMail == null) {
        break missingId;
      }

      id = R.id.intro_nombre;
      TextInputLayout introNombre = ViewBindings.findChildViewById(rootView, id);
      if (introNombre == null) {
        break missingId;
      }

      id = R.id.intro_password;
      TextInputLayout introPassword = ViewBindings.findChildViewById(rootView, id);
      if (introPassword == null) {
        break missingId;
      }

      ConstraintLayout registroLayout = (ConstraintLayout) rootView;

      id = R.id.txtAccount;
      TextView txtAccount = ViewBindings.findChildViewById(rootView, id);
      if (txtAccount == null) {
        break missingId;
      }

      id = R.id.txtMail;
      TextView txtMail = ViewBindings.findChildViewById(rootView, id);
      if (txtMail == null) {
        break missingId;
      }

      id = R.id.txtNombre;
      TextView txtNombre = ViewBindings.findChildViewById(rootView, id);
      if (txtNombre == null) {
        break missingId;
      }

      id = R.id.txtPassword;
      TextView txtPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtPassword == null) {
        break missingId;
      }

      id = R.id.txtSign;
      TextView txtSign = ViewBindings.findChildViewById(rootView, id);
      if (txtSign == null) {
        break missingId;
      }

      return new ActivityRegistroBinding((ConstraintLayout) rootView, InputMail, InputNombre,
          InputPassword, btnRegistrarse, fpShareLogo, introMail, introNombre, introPassword,
          registroLayout, txtAccount, txtMail, txtNombre, txtPassword, txtSign);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
